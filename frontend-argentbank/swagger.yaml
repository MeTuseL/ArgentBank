swagger: '2.0'
info:
    title: Bank Argent API documentation
    description: Contains all available API endpoints in this codebase
    version: '1.0.0'
    termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
tags:
    - name: user
      description: Operations about user
schemes:
    - http
paths:
    /user/login:
        post:
            tags:
                - user
            summary: Login
            description: API for Login
            parameters:
                - in: body
                  name: body
                  description: Login Payload
                  required: true
                  schema:
                      $ref: '#/definitions/Login'
            produces:
                - application/json
            responses:
                '200':
                    description: Login Successfully
                    schema:
                        $ref: '#/definitions/LoginResponse'
                '400':
                    description: Invalid Fields
                '500':
                    description: Internal Server Error
    /user/signup:
        post:
            tags:
                - user
            summary: Signup
            description: API for Signup
            parameters:
                - in: body
                  name: body
                  description: Signup Payload
                  required: true
                  schema:
                      $ref: '#/definitions/User'
            produces:
                - application/json
            responses:
                '200':
                    description: Signup Successfully
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '400':
                    description: Invalid Fields
                '500':
                    description: Internal Server Error
    /user/profile:
        post:
            security:
                - Bearer: []
            tags:
                - user
            summary: User Profile API
            description: API for fetching a user profile
            parameters:
                - in: header
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                '200':
                    description: User profile retrieved successully
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '400':
                    description: Invalid Fields
                '500':
                    description: Internal Server Error
        put:
            security:
                - Bearer: []
            tags:
                - user
            summary: User Profile API
            description: API for updating a user profile
            parameters:
                - in: header
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                  type: string
                - in: body
                  name: body
                  description: Update user profile attributes
                  required: true
                  schema:
                      $ref: '#/definitions/UserProfile'
            produces:
                - application/json
            responses:
                '200':
                    description: User profile retrieved successully
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '400':
                    description: Invalid Fields
                '500':
                    description: Internal Server Error
    /user/{userId}/transactions:
        post:
            tags:
                - user
            summary: Get transactions for the current month
            description: Retrieves all transactions for the current month, grouped by account
            parameters:
                - in: path
                  name: userId
                  description: The user id to retrieve transactions for current month
                  required: true
                  type: string
                - in: header
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                '200':
                    description: Transactions retrieved successfully
                    schema:
                        $ref: '#/definitions/TransactionsResponse'
                '400':
                    description: Missing or incorrect parameters
                '401':
                    description: Unauthorized - Invalid or expired token
                '500':
                    description: Internal server error
    /user/transactions/{transactionId}:
        post:
            tags:
                - user
            summary: Get details of a transaction
            description: Retrieves details of a specific transaction by its ID
            parameters:
                - in: path
                  name: transactionId
                  description: The id of the transaction to retrieve
                  required: true
                  type: string
                - in: header
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                '200':
                    description: Transaction details retrieved successfully
                    schema:
                        $ref: '#/definitions/TransfersResponse'
                '404':
                    description: Transaction not found
                '500':
                    description: Internal Server Error
        put:
            tags:
                - user
            summary: Update a transaction
            description: Updates information for a specific transaction
            parameters:
                - in: path
                  name: transactionId
                  description: ID of the transaction to update
                  required: true
                  type: string
                - in: header
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                  type: string
                - in: body
                  name: body
                  description: Updated transaction details
                  required: true
                  schema:
                      $ref: '#/definitions/TransferUpdate'
            produces:
                - application/json
            responses:
                '200':
                    description: Transaction updated successfully
                    schema:
                        $ref: '#/definitions/TransfersResponse'
                '404':
                    description: Transaction not found
                '400':
                    description: Invalid request
                '500':
                    description: Internal Server Error
securityDefinitions:
    Bearer:
        type: apiKey
        name: Authorization
        in: header
definitions:
    TransactionsResponse:
        type: object
        properties:
            status:
                type: integer
            message:
                type: string
            body:
                type: array
                items:
                    type: object
                    properties:
                        idTransaction:
                            type: string
                        idUser:
                            type: string
                        isCurrentBalance:
                            type: boolean
                        name:
                            type: string
                        balance:
                            type: string

    Transaction:
        type: object
        properties:
            idTransfer:
                type: string
            idTransaction:
                type: string
            date:
                type: string
            description:
                type: string
            amount:
                type: string
            balance:
                type: string
            type:
                type: string
            category:
                type: string
            notes:
                type: string
    TransfersResponse:
        type: object
        properties:
            status:
                type: integer
            message:
                type: string
            body:
                type: array
                items:
                    $ref: '#/definitions/Transaction'
    TransferUpdate:
        type: object
        properties:
            idTransfer:
                type: string
            category:
                type: string
            notes:
                type: string
    User:
        properties:
            email:
                type: string
                description: user email
            password:
                type: string
                description: user password
            firstName:
                type: string
                description: user first name
            lastName:
                type: string
                description: user last name
    ApiResponse:
        type: object
        properties:
            status:
                type: integer
            message:
                type: string
            body:
                type: object
                properties:
                    id:
                        type: string
                    email:
                        type: string
                    firstName:
                        type: string
                    lastName:
                        type: string
                    createAt:
                        type: string
                    updateAt:
                        type: string
    Login:
        properties:
            email:
                type: string
                description: user email
            password:
                type: string
                description: user password

    LoginResponse:
        type: object
        properties:
            token:
                type: string
    UserProfile:
        type: object
        properties:
            firstName:
                type: string
            lastName:
                type: string
